        { Semantic Operations }
        oTempAllocate = 14;
        oTempFree = 15;
        oOperandPushMode = 16; { (16) }
        oOperandChooseMode = 17; { >>16 }
        oOperandPushVariable = 18;
        oOperandPushInteger = 19;
        oOperandPushString = 20;
        oOperandPushBoolean = 21;
        oOperandPushJumpCondition = 22; { (15) }
        oOperandChooseJumpCondition = 23; { >>15 }
        oOperandPushStringAddress = 24;
        oOperandPushProcedure = 25;
        oOperandPushTrap = 26;
        oOperandPushCaseLow = 27;
        oOperandPushCaseHigh = 28;
        oOperandPushArrayLowerBound = 29;
        oOperandPushArrayUpperBound = 30;
        oOperandPushCopy = 31;
        oOperandPushTemp = 32;
        oOperandSetMode = 33; { (16) }
        oOperandSetLength = 34; { (13) }
        oOperandSetRegnum = 35; { (13) }
        oOperandChooseLength = 36; { >>13 }
        oOperandSetValue = 37; { (13) }
        oOperandChooseValue = 38; { >>13 }
        oOperandChooseManifestValue = 39; { >>13 }
        oOperandIsValueNegative = 40; { >>14 }
        oOperandEnterValueFromCaseTableAddress = 41;
        oOperandEnterValueFromCodeAddress = 42;
        oOperandEnterValueFromDataAreaSize = 43;
        oOperandCompareLeftAndRight = 44; { >>14 }
        oOperandCompareRightAndDest = 45; { >>14 }
        oOperandIsJumpCondition = 46; { >>14 }
        oOperandComplementJumpCondition = 47;
        oOperandAddManifestValues = 48;
        oOperandSubtractManifestValues = 49;
        oOperandMultiplyManifestValues = 50;
        oOperandNegateManifestValue = 51;
        oOperandCompareManifestValues = 52; { >>14 }
        oOperandMergeShuntsWithAddress = 53;
        oOperandMergeShunts = 54;
        oOperandFoldManifestSubscript = 55;
        oOperandSwap = 56;
        oOperandSwapRightAndDest = 57;
        oOperandSwapLeftAndDest = 58;
        oOperandPop = 59;
        oFixPushAddress = 60;
        oFixPushLastAddress = 61;
        oFixSwapAddresses = 62;
        oFixAndFreeShuntList = 63;
        oFixAndFreeFalseBranches = 64;
        oFixForwardBranch = 65;
        oFixPopAddress = 66;
        oEmitProcLabel = 67; { (16) }
        oEmitNone = 68; { (17) }
        oEmitSingle = 69; { (17) }
        oEmitDouble = 70; { (17) }
        oEmitString = 71;
        oEmitConditionalForwardBranch = 72;
        oEmitUnconditionalForwardBranch = 73;
        oEmitConditionalBackwardBranch = 74;
        oEmitUnconditionalBackwardBranch = 75;
        oEmitSourceCoordinate = 76;
        oEmitMergeSourceCoordinate = 77;
        oEmitCaseMergeBranch = 78;
        oEmitCaseBranchTable = 79;
        oCasePush = 80;
        oCasePop = 81;
        oCaseEnterTCodeAddress = 82;
        oCaseEnterVariantAddress = 83;
        oCaseEnterMergeAddress = 84;
        oCaseEnterAbortAddress = 85;
        oArrayEnterLowerBound = 86;
        oArrayEnterUpperBound = 87;
        oOptionTestChecking = 88; { >>14 }

        { Input Tokens }
        tMultiply = 0;
        firstTcode = 0;
        tDivide = 1;
        tModulus = 2;
        tAdd = 3;
        tSubtract = 4;
        tEQ = 5;
        tNE = 6;
        tGT = 7;
        tGE = 8;
        tLT = 9;
        tLE = 10;
        tAnd = 11;
        tInfixAnd = 12;
        tOr = 13;
        tInfixOr = 14;
        tNegate = 15;
        tNot = 16;
        tChr = 17;
        tOrd = 18;
        tEoln = 19;
        tEOF = 20;
        tVarParm = 21;
        tFetchAddress = 22;
        tFetchInteger = 23;
        tFetchString = 24;
        tFetchBoolean = 25;
        tAssignBegin = 26;
        tAssignAddress = 27;
        tAssignInteger = 28;
        tAssignString = 29;
        tAssignBoolean = 30;
        tStoreAddress = 31;
        tStoreInteger = 32;
        tStoreString = 33;
        tStoreBoolean = 34;
        tSubscriptBegin = 35;
        tSubscriptAddress = 36;
        tSubscriptInteger = 37;
        tSubscriptString = 38;
        tSubscriptBoolean = 39;
        tArrayDescriptor = 40;
        tFileDescriptor = 41;
        tFileBind = 42;
        tIfBegin = 43;
        tIfEnd = 44;
        tCaseBegin = 45;
        tWhileBegin = 46;
        tCallBegin = 47;
        tParmEnd = 48;
        tProcedureEnd = 49;
        tWriteBegin = 50;
        tReadBegin = 51;
        tTrapBegin = 52;
        tWriteEnd = 53;
        tReadEnd = 54;
        tConcatenate = 55;
        tSubstring = 56;
        tLength = 57;
        tIndex = 58;
        tStringEqual = 59;
        tDoBegin = 60;
        tStoreChar = 61;
        tRepeatBegin = 62;
        tRepeatControl = 63;
        tSubscriptChar = 64;
        tFetchChar = 65;
        tAssignChar = 66;
        tLiteralAddress = 67;
        firstCompoundTcode = 67;
        tLiteralInteger = 68;
        tLiteralBoolean = 69;
        tLiteralString = 70;
        tIfThen = 71;
        tIfMerge = 72;
        tCaseSelect = 73;
        tCaseMerge = 74;
        tCaseEnd = 75;
        tWhileTest = 76;
        tWhileEnd = 77;
        tSkipProc = 78;
        tCallEnd = 79;
        tLineNumber = 80;
        tDoBreakIf = 81;
        tDoTest = 82;
        tDoEnd = 83;
        tCaseElse = 84;
        tSkipString = 85;
        tStringData = 86;
        tRepeatTest = 87;
        tLiteralChar = 88;
        tTrap = 89;
        lastCompoundTcode = 89;
        tEndOfFile = 90;
        lastTcode = 90;

        { Output Tokens }

        { Input/Output Tokens }

        { Error Codes }
        eDivisionByZero = 10;
        firstErrorCode = 10;
        lastSslErrorCode = 10;

        { Type Values }
        { Type 13 }
        minusOne = -1;
        zero = 0;
        null = 0;
        one = 1;
        two = 2;
        four = 4;
        eight = 8;
        twelve = 12;
        regAX = 1;
        regBX = 2;
        regCX = 3;
        regDX = 4;
        trHalt = 0;
        trReset = 1;
        trRewrite = 2;
        trRead = 3;
        trReadln = 4;
        trWrite = 5;
        trWriteln = 6;
        trWriteInteger = 8;
        trReadInteger = 10;
        trAssign = 12;
        trSubscriptAbort = 13;
        trCaseAbort = 14;
        trEoln = 15;
        trEof = 16;
        trAssignString = 101;
        trChrString = 102;
        trConcatenate = 103;
        trSubstring = 104;
        trLength = 105;
        trStringIndex = 106;
        trStringEqual = 107;
        trReadString = 108;
        trWriteString = 109;
        byte = 1;
        string = 3;
        word = 2;
        { Type 14 }
        no = 0;
        yes = 1;
        { Type 15 }
        iJalways = -9;
        iJhi = -8;
        iJlos = -7;
        iJge = -6;
        iJlt = -5;
        iJle = -4;
        iJgt = -3;
        iJne = -2;
        iJeq = -1;
        iJnever = 0;
        { Type 16 }
        mStatic = 1;
        mStaticManifest = 2;
        mTemp = 3;
        mTempIndirect = 4;
        mTempIndirectCaseOffset = 5;
        mStackReg = 6;
        mStack = 7;
        mBaseReg = 8;
        mArgument = 9;
        mManifest = 10;
        mResultReg = 11;
        mRemainderReg = 12;
        mScratchReg1 = 13;
        mScratchReg2 = 14;
        mGlobalBase = 15;
        mLineNum = 16;
        mMainProc = 17;
        mProc = 18;
        mTrap = 19;
        mWord = 20;
        { Type 17 }
        iAdd = 1;
        iCmp = 2;
        iDec = 3;
        iDiv = 4;
        iInc = 5;
        iMul = 6;
        iShl = 7;
        iNeg = 8;
        iSub = 9;
        iMov = 10;
        iPush = 11;
        iPop = 12;
        iLoada = 13;
        iExtend = 14;
        iJmp = 15;
        iCall = 16;
        iReturn = 17;
        iEnter = 18;
        iLeave = 19;
        iGlobl = 20;
        iText = 21;
        iData = 22;
        iWord = 23;
        iSpace = 24;

        { S/SL Rule Table Addresses } {
        Program = 0;
        EmitProgramPrologue = 7;
        Block = 65;
        EmitProgramEpilogue = 58;
        EmitStringAddress = 1275;
        OperandAssignIntegerPopPop = 3777;
        Routine = 143;
        Statements = 246;
        OperandNextArgument = 231;
        OperandAssignStringPopPop = 2277;
        OperandAssignBooleanPopPop = 3810;
        AssignStmt = 308;
        CallStmt = 316;
        IfStmt = 391;
        WhileStmt = 555;
        RepeatStmt = 613;
        CaseStmt = 645;
        WriteProc = 777;
        ReadProc = 861;
        TrapStmt = 952;
        OperandPushVariable = 1278;
        OperandPushExpressionAssignPopPop = 1980;
        OperandPushExpression = 1070;
        OperandConvertJumpConditionToData = 3847;
        OperandForceAddressIntoTemp = 4197;
        OperandForceToStack = 4349;
        OperandPopAndFreeTemp = 3822;
        OperandPushBooleanControlExpression = 445;
        FoldIfStmt = 486;
        OperandComplementJumpCondition = 3713;
        OperandInfixOr = 3739;
        OperandForceToJumpCondition = 450;
        EmitTst = 4554;
        SkipToEndIf = 536;
        SkipToEndWhile = 594;
        OperandFreeTemp = 3835;
        CaseSelect = 673;
        CaseVariant = 676;
        CaseEnd = 684;
        EmitDefaultCaseAbort = 694;
        EmitCaseSubscriptJump = 718;
        OperandForceIntoTemp = 4135;
        OperandSubtractRightFromLeftPop = 2861;
        WriteParameter = 792;
        ReadParameter = 876;
        OperandNegate = 2686;
        OperandAddPop = 2764;
        OperandSubtractPop = 2883;
        OperandMultiplyPop = 3034;
        OperandDividePop = 3179;
        OperandModPop = 3204;
        OperandNot = 3708;
        OperandOrPop = 3761;
        OperandEqualPop = 3944;
        OperandGreaterPop = 4019;
        OperandLessPop = 4107;
        OperandConcatenatePop = 2593;
        OperandIndexPop = 2525;
        OperandLength = 2463;
        OperandSubstringPopPop = 2395;
        OperandStringEqualPop = 2327;
        OperandChr = 3336;
        OperandOrd = 3395;
        OperandEolnFunction = 3429;
        OperandEofFunction = 3555;
        OperandSubscriptIntegerPop = 1347;
        OperandSubscriptBooleanPop = 1735;
        OperandSubscriptNonManifestIntegerPop = 1376;
        OperandCheckedSubscriptNonManifestIntegerPop = 1389;
        OperandUncheckedSubscriptNonManifestIntegerPop = 1474;
        EmitSubscriptRangeCheck = 1925;
        OperandPushArrayLowerBound = 1892;
        OperandSubscriptCharPop = 1552;
        OperandSubscriptNonManifestCharPop = 1584;
        OperandCheckedSubscriptNonManifestCharPop = 1597;
        OperandUncheckedSubscriptNonManifestCharPop = 1669;
        OperandSubscriptNonManifestBooleanPop = 1722;
        OperandCheckedSubscriptNonManifestBooleanPop = 1767;
        OperandUncheckedSubscriptNonManifestBooleanPop = 1839;
        OperandPushArrayUpperBound = 1906;
        EmitCmp = 4464;
        EmitSubscriptAbort = 1959;
        OperandNegateAssignPopPop = 2661;
        OperandAddAssignPopPopPop = 2701;
        OperandSubtractAssignPopPopPop = 2841;
        OperandMultiplyAssignPopPopPop = 2926;
        OperandDivideAssignPopPopPop = 3133;
        OperandNotAssignPopPop = 3617;
        SaveTempRegsToStack = 3491;
        RestoreTempRegsFromStack = 3523;
        EmitMove = 4520;
        OperandAddRightToLeftPop = 2734;
        EmitAdd = 4434;
        OperandForceLeftIntoTemp = 4183;
        EmitSub = 4449;
        OperandMultiplyLeftByRightPop = 2959;
        OperandDivideLeftByRightPop = 3153;
        OperandEmitDividePopPop = 3229;
        OperandAssignCharPopPop = 3800;
        OperandPushTrueTemp = 3912;
        OperandPushFalseTemp = 3928;
        OperandPushTempByte = 4340;
        OperandFoldComparisonPopPop = 4111;
        OperandPushTempWord = 4331;
        OperandForceAddressIntoNewTemp = 4259;
        OperandAreLeftAndRightManifest = 4376; >>14
        OperandLeftOrRightIsTemp = 4405; >>14
        }

        { S/SL Table Parameters }
        sslTblSize = 4589;
        minSslTableValue = -32767;
        maxSslTableValue = 32767;
